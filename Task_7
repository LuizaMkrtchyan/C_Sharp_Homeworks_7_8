using System;
namespace task_7
{
    class Program
    {
        //Queen placement in Matrix [8,8] with heuristic method. Place queens on a chessboard so that
        //they do not hit each other, using the heuristic of maximum free for queen fields.Display the current results
        //of the heuristic run
        static bool array_exists(int n, int m, int[,] arr, int k)
        {
            for (int i = 0; i < n; i++)
            {
                for (int j = 0; j < m; j++)
                {
                    if (arr[i, j] == k)
                        return true;
                }
            }
            return false;
        }
        static int[] min_temp(int[,] temp)
        {
            int min = 28;
            int[] minn=new int[2];
            for (int i = 0; i < 8; i++)
            {
                for (int j = 0; j < 8; j++)
                {
                    if(temp[i,j]<min && temp[i, j] != -1)
                    {
                        min = temp[i, j];
                        minn[0] = i;
                        minn[1] = j;

                    }
                }
            }
            return minn;
        }
        static void Main(string[] args)
        {
            int[,] template = {
                {21,21,21,21,21,21,21,21 },
                {21,23,23,23,23,23,23,21 },
                {21,23,25,25,25,25,23,21 },
                {21,23,25,27,27,25,23,21 },
                {21,23,25,27,27,25,23,21 },
                {21,23,25,25,25,25,23,21 },
                {21,23,23,23,23,23,23,21 },
                {21,21,21,21,21,21,21,21 }
            };
            int[,] board = new int[8, 8];
            Console.ForegroundColor = ConsoleColor.Green;
            for (int k = 0; k < 8; k++)
            {
                Console.SetCursorPosition(20, k);
                for (int m = 0; m < 8; m++)
                {

                    Console.Write(template[k, m] + " ");
                }
                Console.WriteLine();
            }
            Console.ResetColor();
            Console.SetCursorPosition(0, 0);
            Console.WriteLine();
            Random rnd = new Random();

            int i, j;
            do
            {
                    i = min_temp(template)[0];
                    j = min_temp(template)[1];
                for (int m = 0; m < 8; m++)
                {
                    for (int l = 0; l < 8; l++)
                    {
                        if ((m == i && l == j) || board[m, l] == 5)
                        {
                            board[m, l] = 5;
                            template[m, l] = -1;
                            Console.ForegroundColor = ConsoleColor.Yellow;
                            Console.Write(board[m, l] + " ");
                            Console.ResetColor();
                        }
                        else if (m == i || l == j || m - l == i - j || m + l == i + j || board[m, l] == 1)
                        {
                            board[m, l] = 1;
                            template[m,l] = -1;
                            Console.ForegroundColor = ConsoleColor.Magenta;
                            Console.Write(board[m, l] + " ");
                            Console.ResetColor();
                        }
                        else
                        {
                            Console.Write(board[m, l] + " ");
                        }
                    }
                    Console.WriteLine();
                }
                Console.WriteLine();

            } while (array_exists(8, 8, board, 0));


        }
    }
}
